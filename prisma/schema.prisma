generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime? @map("email_verified")
  image          String?
  image_key      String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  conversationIds String[]
  conversations   Conversation[] @relation("ConversationToUser")

  seenMessageIds String[]
  seenMessages   Message[] @relation("seen")

  messages Message[]
  account  Account?
}

model Message {
  id        String   @id @default(cuid())
  body      String?
  image     String?
  image_key String?
  createdAt DateTime @default(now())

  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String

  seen    User[]   @relation("seen")
  seenIds String[]

  senderId String
  sender   User   @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

model Conversation {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name          String?
  isGroup       Boolean?

  messages    Message[]
  messagesIds String[]

  userIds String[]
  users   User[]   @relation("ConversationToUser")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @unique @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
